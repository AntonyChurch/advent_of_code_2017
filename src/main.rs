extern crate adventofcode;

fn main(){
    println!("Answer 1a: {}", adventofcode::one_a(String::from
    println!("Ansert 1b: {}", adventofcode::one_b(String::from

    twoa();
    twob();
}

fn twoa(){
    let mut whole: Vec<Vec<u32>> = Vec::new();

    let row1: Vec<u32> = vec![278,	1689,	250,	1512,	1792,	1974,	175,	1639,	235,	1635,	1690,	1947,	810,	224,	928,	859];
    let row2: Vec<u32> = vec![160,	50,	55,	81,	68,	130,	145,	21,	211,	136,	119,	78,	174,	155,	149,	72];
    let row3: Vec<u32> = vec![4284,	185,	4499,	273,	4750,	4620,	4779,	4669,	2333,	231,	416,	1603,	197,	922,	5149,	2993];
    let row4: Vec<u32> = vec![120,	124,	104,	1015,	1467,	110,	299,	320,	1516,	137,	1473,	132,	1229,	1329,	1430,	392];
    let row5: Vec<u32> = vec![257,	234,	3409,	2914,	2993,	3291,	368,	284,	259,	3445,	245,	1400,	3276,	339,	2207,	233];
    let row6: Vec<u32> = vec![1259,	78,	811,	99,	2295,	1628,	3264,	2616,	116,	3069,	2622,	1696,	1457,	1532,	268,	82];
    let row7: Vec<u32> = vec![868,	619,	139,	522,	168,	872,	176,	160,	1010,	200,	974,	1008,	1139,	552,	510,	1083];
    let row8: Vec<u32> = vec![1982,	224,	3003,	234,	212,	1293,	1453,	3359,	326,	3627,	3276,	3347,	1438,	2910,	248,	2512];
    let row9: Vec<u32> = vec![4964,	527,	5108,	4742,	4282,	4561,	4070,	3540,	196,	228,	3639,	4848,	152,	1174,	5005,	202];
    let row10: Vec<u32> = vec![1381,	1480,	116,	435,	980,	1022,	155,	1452,	1372,	121,	128,	869,	1043,	826,	1398,	137];
    let row11: Vec<u32> = vec![2067,	2153,	622,	1479,	2405,	1134,	2160,	1057,	819,	99,	106,	1628,	1538,	108,	112,	1732];
    let row12: Vec<u32> = vec![4535,	2729,	4960,	241,	4372,	3960,	248,	267,	230,	5083,	827,	1843,	3488,	4762,	2294,	3932];
    let row13: Vec<u32> = vec![3245,	190,	2249,	2812,	2620,	2743,	2209,	465,	139,	2757,	203,	2832,	2454,	177,	2799,	2278];
    let row14: Vec<u32> = vec![1308,	797,	498,	791,	1312,	99,	1402,	1332,	521,	1354,	1339,	101,	367,	1333,	111,	92];
    let row15: Vec<u32> = vec![149,	4140,	112,	3748,	148,	815,	4261,	138,	1422,	2670,	32,	334,	2029,	4750,	4472,	2010];
    let row16: Vec<u32> = vec![114,	605,	94,	136,	96,	167,	553,	395,	164,	159,	284,	104,	530,	551,	544,	18];
    
    whole.push(row1);
    whole.push(row2);
    whole.push(row3);
    whole.push(row4);
    whole.push(row5);
    whole.push(row6);
    whole.push(row7);
    whole.push(row8);
    whole.push(row9);
    whole.push(row10);
    whole.push(row11);
    whole.push(row12);
    whole.push(row13);
    whole.push(row14);
    whole.push(row15);
    whole.push(row16);

    let val = adventofcode::two_a(whole);

    println!("Answer 2a: {}", val);
}

fn twob(){
    let mut whole: Vec<Vec<u32>> = Vec::new();

    whole.push(vec![278,	1689,	250,	1512,	1792,	1974,	175,	1639,	235,	1635,	1690,	1947,	810,	224,	928,	859]);
    whole.push(vec![160,	50,	55,	81,	68,	130,	145,	21,	211,	136,	119,	78,	174,	155,	149,	72]);
    whole.push(vec![4284,	185,	4499,	273,	4750,	4620,	4779,	4669,	2333,	231,	416,	1603,	197,	922,	5149,	2993]);
    whole.push(vec![120,	124,	104,	1015,	1467,	110,	299,	320,	1516,	137,	1473,	132,	1229,	1329,	1430,	392]);
    whole.push(vec![257,	234,	3409,	2914,	2993,	3291,	368,	284,	259,	3445,	245,	1400,	3276,	339,	2207,	233]);
    whole.push(vec![1259,	78,	811,	99,	2295,	1628,	3264,	2616,	116,	3069,	2622,	1696,	1457,	1532,	268,	82]);
    whole.push(vec![868,	619,	139,	522,	168,	872,	176,	160,	1010,	200,	974,	1008,	1139,	552,	510,	1083]);
    whole.push(vec![1982,	224,	3003,	234,	212,	1293,	1453,	3359,	326,	3627,	3276,	3347,	1438,	2910,	248,	2512]);
    whole.push(vec![4964,	527,	5108,	4742,	4282,	4561,	4070,	3540,	196,	228,	3639,	4848,	152,	1174,	5005,	202]);
    whole.push(vec![1381,	1480,	116,	435,	980,	1022,	155,	1452,	1372,	121,	128,	869,	1043,	826,	1398,	137]);
    whole.push(vec![2067,	2153,	622,	1479,	2405,	1134,	2160,	1057,	819,	99,	106,	1628,	1538,	108,	112,	1732]);
    whole.push(vec![4535,	2729,	4960,	241,	4372,	3960,	248,	267,	230,	5083,	827,	1843,	3488,	4762,	2294,	3932]);
    whole.push(vec![3245,	190,	2249,	2812,	2620,	2743,	2209,	465,	139,	2757,	203,	2832,	2454,	177,	2799,	2278]);
    whole.push(vec![1308,	797,	498,	791,	1312,	99,	1402,	1332,	521,	1354,	1339,	101,	367,	1333,	111,	92]);
    whole.push(vec![149,	4140,	112,	3748,	148,	815,	4261,	138,	1422,	2670,	32,	334,	2029,	4750,	4472,	2010]);
    whole.push(vec![114,	605,	94,	136,	96,	167,	553,	395,	164,	159,	284,	104,	530,	551,	544,	18]);

    println!("Answer 2b: {}", adventofcode::two_b(whole));
}